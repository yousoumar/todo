{"version":3,"sources":["components/Form/Form.js","assets/trash.svg","components/ToDo/ToDo.js","components/ToDoList/ToDoList.js","App.js","index.js"],"names":["Form","props","useState","inputState","inputSetState","onSubmit","e","preventDefault","newState","state","content","id","uuidv4","completed","setState","toggleSetState","addToDo","type","placeholder","onInput","currentTarget","value","handleInput","ToDo","ToDoData","deleteToDo","toggleState","checkToDo","className","checked","onClick","parentElement","src","trash","alt","ToDoList","filter","todo","slice","find","toDolistFilter","map","displayToDoList","length","deleteCompletedToDoList","App","handleToggle","classList","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a7faccd.chunk.js","sourcesContent":["import './Form.css'\nimport { v4 as uuidv4 } from 'uuid';\nimport {useState} from 'react';\n\nexport default function Form(props) {\n\n    // on input \n    const [inputState, inputSetState] = useState('');\n    const handleInput = (e) => {\n        inputSetState(e.currentTarget.value);\n    }\n\n     // on submit\n     const addToDo = (e) =>{\n        e.preventDefault();\n        if (inputState){\n            const newState = [...props.state, {content : inputState, id : uuidv4(), completed : false}];\n            props.setState(newState);\n        }\n        props.toggleSetState(\"all\");\n        inputSetState('');\n    }\n    \n    return (\n        <form onSubmit = {(e) => addToDo(e)}>\n            <input type=\"text\" \n                placeholder = \"add task\" \n                onInput = {e => handleInput(e)}\n                value = {inputState}\n            />\n            <button type=\"submit\">Add</button>\n      </form>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/trash.4e0143f2.svg\";","import './ToDo.css';\nimport trash from '../../assets/trash.svg'\n\n\nconst ToDo = ({ToDoData, deleteToDo, toggleState, checkToDo}) => {\n\n    return (\n        <li className = {ToDoData.completed ? 'to-do completed' : 'to-do ' } id = {ToDoData.id} >\n            <div className=\"input-label-container\">\n                <input \n                    type=\"checkbox\" \n                    checked = {ToDoData.completed ? \"checked\" : \"\"}\n                    onClick = {e => checkToDo(e.currentTarget.parentElement.parentElement.id)}\n                /> \n                <label>{ToDoData.content}</label>\n            </div>\n            \n            {\n                (toggleState === \"completed\") && <button onClick = { e => deleteToDo(e.currentTarget.parentElement.id)}>\n                                                    <img src={trash} alt = \"trash\"/>\n                                                </button> \n            }\n        </li>\n    )\n}\nexport default ToDo;","import './ToDoList.css';\nimport ToDo from '../ToDo/ToDo';\nimport trash from '../../assets/trash.svg'\n\nexport default function ToDoList({state, setState, toggleState}) {\n    function deleteToDo(id){\n        const newState = state.filter(todo => todo.id !== id);\n        setState(newState);\n    }\n    function checkToDo(id){\n\n        const newState = state.slice();\n        const todo = newState.find(todo => todo.id === id);\n        todo.completed = !todo.completed;\n        setState(newState);\n   \n    }\n    function deleteCompletedToDoList(){\n        const newState = state.filter(todo => todo.completed === false);\n        setState(newState);\n    }\n    function displayToDoList(state){\n       return state.map(todo =>   <ToDo \n                                    ToDoData = {todo} \n                                    key = {todo.id} \n                                    deleteToDo = {deleteToDo} \n                                    toggleState= {toggleState}\n                                    checkToDo = {checkToDo}\n                                   />); \n    }\n    function toDolistFilter(state, toggleState){\n        if (toggleState === \"all\"){\n            return state;\n        }else if (toggleState === \"completed\"){\n            state = state.filter(todo => todo.completed === true);\n            return state;\n        }else{\n            state = state.filter(todo => todo.completed === false);\n            return state;\n        }\n          \n    }\n    return (\n        <div className = \"to-do-list-container\">\n            <ul className = \"to-do-list\">\n            \n                {\n                     \n                     displayToDoList(toDolistFilter(state, toggleState))               \n                }\n                \n            </ul>\n            {\n                (toDolistFilter(state, toggleState).length >= 2 && toggleState === \"completed\") && \n                <button className=\"delete-all\" onClick = {()=>{deleteCompletedToDoList()}}>\n                    <span><img src={trash} alt=\"trash\" /></span> <span>delete all</span> \n                </button>\n            }\n        </div>\n        \n    )\n}\n","import './App.css';\nimport Form from './components/Form/Form';\nimport ToDoList from './components/ToDoList/ToDoList';\nimport {useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const [state, setState] = useState([\n    {\n      content : \"Do coding challenges\",\n      id : uuidv4(),\n      completed : false\n    },\n    {\n      content : \"Drink coffee\",\n      id : uuidv4(),\n      completed : false\n    },\n    {\n      content : \"Listen to music\",\n      id : uuidv4(),\n      completed : false\n    }\n  ]);\n\n  const [toggleState, toggleSetState] = useState('all');\n  function handleToggle(e){\n    toggleSetState(e.currentTarget.classList[0]);\n  }\n  return (\n    \n    <>\n\n      <h1>#todo</h1>\n\n      <ul className = \"filter-buttons-container\">\n        <li><button className = {toggleState === \"all\" ? \"all active \" : \"all \" } onClick ={(e)=>{handleToggle(e)}}>All</button></li>\n        <li ><button className = {toggleState === \"no-completed\" ? \"no-completed active \" : \"no-completed \" } onClick ={(e)=>{handleToggle(e)}}>Active</button></li>\n        <li><button className = {toggleState === \"completed\" ? \"completed active \" : \"completed \" } onClick ={(e)=>{handleToggle(e)}}>Completed</button></li>\n      </ul> \n\n      <Form state = {state} setState ={setState} toggleSetState ={toggleSetState}/>\n\n      <ToDoList state = {state} setState = {setState} toggleState = {toggleState}/>\n\n      <footer>\n        created by <a href=\"https://devchallenges.io/portfolio/yousoumar\" target =\"_blank\" rel=\"noreferrer\">yousoumar</a> - devChallenges.io\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}