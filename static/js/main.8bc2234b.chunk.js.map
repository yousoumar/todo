{"version":3,"sources":["components/Button/Button.js","components/Form/Form.js","assets/trash.svg","components/ToDo/ToDo.js","components/ToDoList/ToDoList.js","components/Loader/Loader.js","components/App/App.js","index.js"],"names":["Button","props","style","backgroundColor","width","fontSize","padding","className","class","type","onClick","handleClick","icon","src","alt","children","Form","useState","inputState","inputSetState","onSubmit","e","preventDefault","trim","newState","state","content","id","uuidv4","completed","localStorage","setItem","JSON","stringify","setState","toggleSetState","addToDo","placeholder","onInput","currentTarget","value","handleInput","ToDo","ToDoData","deleteToDo","toggleState","checkToDo","checked","parentElement","trash","ToDoList","filter","todo","slice","find","toDolistFilter","map","displayToDoList","length","Loader","App","parse","getItem","initialState","handleToggle","classList","loaderState","loaderSetState","useEffect","setTimeout","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bc2234b.chunk.js","sourcesContent":["import './Button.css';\n\nexport default function Button(props) {\n    const style = {\n        backgroundColor : props.backgroundColor,\n        width : props.width,\n        fontSize : props.fontSize,\n        padding : props.padding\n    }\n    return (\n        \n        <button \n        className = {props.class ? props.class + \" button\" : \"button\"} \n        type = {props.type} \n        style ={style} \n        onClick = {props.handleClick}\n        >\n            {props.icon ? \n                            <><span><img src = {props.icon} alt =\"\"></img> </span><span>{props.children}</span></> \n                        : props.children}\n         \n        </button>\n    )\n}\n","import './Form.css'\nimport Button from '../Button/Button';\nimport { v4 as uuidv4 } from 'uuid';\nimport {useState} from 'react';\n\nexport default function Form(props) {\n\n    // on input \n    const [inputState, inputSetState] = useState('');\n    const handleInput = (e) => {\n        inputSetState(e.currentTarget.value);\n    }\n\n    // on submit\n    const addToDo = (e) =>{\n        e.preventDefault();\n        if (inputState.trim()){\n            const newState = [...props.state, {content : inputState, id : uuidv4(), completed : false}];\n            localStorage.setItem('state', JSON.stringify(newState));\n            props.setState(newState);\n            props.toggleSetState(\"all\");\n        }\n        \n        inputSetState('');\n    }\n    \n    return (\n        <form onSubmit = {(e) => addToDo(e)}>\n            <input type=\"text\" \n                placeholder = \"Nouvelle tÃ¢che\" \n                onInput = {e => handleInput(e)}\n                value = {inputState}\n            />\n            <Button \n                type = \"submit\" \n                backgroundColor = \"#2F80ED\"\n                width = \"6.8rem\"\n                fontSize = \".9rem\"   \n            >\n                Ajouter\n            </Button>\n           \n      </form>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/trash.4e0143f2.svg\";","import './ToDo.css';\nimport trash from '../../assets/trash.svg'\n\n\nconst ToDo = ({ToDoData, deleteToDo, toggleState, checkToDo}) => {\n\n    return (\n        <li className = {ToDoData.completed ? 'to-do completed' : 'to-do ' } id = {ToDoData.id} >\n            <div className=\"input-label-container\">\n                <input \n                    type=\"checkbox\" \n                    checked = {ToDoData.completed ? \"checked\" : \"\"}\n                    onClick = {e => checkToDo(e.currentTarget.parentElement.parentElement.id)}\n                /> \n                <label>{ToDoData.content}</label>\n            </div>\n            \n            {\n                (toggleState === \"completed\") && <button onClick = { e => deleteToDo(e.currentTarget.parentElement.id)}>\n                                                    <img src={trash} alt = \"trash\"/>\n                                                </button> \n            }\n        </li>\n    )\n}\nexport default ToDo;","import './ToDoList.css';\nimport ToDo from '../ToDo/ToDo';\nimport trash from '../../assets/trash.svg';\nimport Button from '../Button/Button';\n\nexport default function ToDoList({state, setState, toggleState}) {\n    function deleteToDo(id){\n        const newState = state.filter(todo => todo.id !== id);\n        localStorage.setItem('state', JSON.stringify(newState));\n        setState(newState);\n    }\n    function checkToDo(id){\n\n        const newState = state.slice();\n        const todo = newState.find(todo => todo.id === id);\n        todo.completed = !todo.completed;\n        localStorage.setItem('state', JSON.stringify(newState));\n        setState(newState);\n   \n    }\n    function deleteCompletedToDoList(){\n        const newState = state.filter(todo => todo.completed === false);\n        localStorage.setItem('state', JSON.stringify(newState));\n        setState(newState);\n    }\n    function displayToDoList(state){\n       return state.map(todo =>   <ToDo \n                                    ToDoData = {todo} \n                                    key = {todo.id} \n                                    deleteToDo = {deleteToDo} \n                                    toggleState= {toggleState}\n                                    checkToDo = {checkToDo}\n                                   />); \n    }\n    function toDolistFilter(state, toggleState){\n        if (toggleState === \"all\"){\n            return state;\n        }else if (toggleState === \"completed\"){\n            state = state.filter(todo => todo.completed === true);\n            return state;\n        }else{\n            state = state.filter(todo => todo.completed === false);\n            return state;\n        }\n          \n    }\n    return (\n        <div >\n            <ul className = \"to-do-list\">\n            \n                {\n                     \n                     displayToDoList(toDolistFilter(state, toggleState))               \n                }\n                \n            </ul>\n            {\n                (toDolistFilter(state, toggleState).length >= 2 && toggleState === \"completed\") && \n                <Button \n                    class=\"delete\" \n                    icon = {trash} \n                    backgroundColor = \"#EB5757\" \n                    padding = \"1rem\"\n                    handleClick = {deleteCompletedToDoList}\n                >\n                    Tout supprimer\n                </Button>\n            }\n        </div>\n        \n    )\n}\n","import './Loader.css'\n\nexport default function Loader() {\n    return (\n        <div className = \"loader\">\n            <h1>#todo</h1>\n            <div>Pour ne plus jamais oublier</div>\n        </div>\n    )\n}\n","import './App.css';\nimport Form from './../Form/Form';\nimport ToDoList from './../ToDoList/ToDoList';\nimport {useState, useEffect} from 'react';\nimport Loader from '../Loader/Loader'\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n\n  // what contains and updates the task list\n  const [state, setState] = useState(JSON.parse(localStorage.getItem('state')));\n\n  // in case we have nothing in local storage\n  const initialState = [\n    {\n      content : \"Coder un nouveau projet\",\n      id : uuidv4(),\n      completed : false\n    },\n   \n    {\n      content : \"Boire du cafÃ©\",\n      id : uuidv4(),\n      completed : true\n    },\n    {\n      content : \"Ecouter de la musique\",\n      id : uuidv4(),\n      completed : true\n    }\n  ];\n\n  // what allows to navigate between all, active, and completed tasks\n  const [toggleState, toggleSetState] = useState('all');\n  function handleToggle(e){\n    toggleSetState(e.currentTarget.classList[0]);\n  }\n  \n  // what allows us to handle our loader\n  const [loaderState, loaderSetState] = useState('');\n  useEffect(() => {\n      setTimeout(()=>{\n      loaderSetState('loaded')\n    }, 2000);\n  }, []);\n\n  return (\n    \n    <>\n      {loaderState === 'loaded' ? <>\n        <h1>#todo</h1>\n\n        <ul className = \"filter-buttons-container\">\n          <li><button className = {toggleState === \"all\" ? \"all active \" : \"all \" } onClick ={(e)=>{handleToggle(e)}}>Toutes</button></li>\n          <li ><button className = {toggleState === \"no-completed\" ? \"no-completed active \" : \"no-completed \" } onClick ={(e)=>{handleToggle(e)}}>Actives</button></li>\n          <li><button className = {toggleState === \"completed\" ? \"completed active \" : \"completed \" } onClick ={(e)=>{handleToggle(e)}}>CompletÃ©es</button></li>\n        </ul> \n\n        <Form \n          state = {state ? state : initialState}\n          setState ={setState} \n          toggleSetState ={toggleSetState}\n        />\n\n        <ToDoList \n          state = {state ? state : initialState}\n          setState ={setState} \n          toggleState ={toggleState}\n        />\n\n\n        <footer>\n          created by <a href=\"https://github.com/yousoumar\" target =\"_blank\" rel=\"noreferrer\">yousoumar</a> - devChallenges.io\n        </footer>\n        </>\n       : <Loader/>\n      }\n    </>\n   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}